[
  {
    "testName": "counter",
    "llmProvider": "OpenAI",
    "modelIdentifier": "gpt-4o",
    "generatedCode": "<script>\n\tlet $state = {\n\t\tcount: 0\n\t};\n\n\tfunction increment() {\n\t\t$state.count += 1;\n\t}\n\n\tfunction decrement() {\n\t\t$state.count -= 1;\n\t}\n</script>\n\n<div class=\"counter\">\n\t<button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n\t<span data-testid=\"count-value\">{$state.count}</span>\n\t<button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>\n\n<style>\n\t.counter {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 0.5rem;\n\t}\n</style>",
    "testResult": {
      "testName": "counter",
      "success": false,
      "testFiles": 1,
      "totalTests": 0,
      "failedTests": 0,
      "errors": [
        "tmp/Component.svelte:2:5 The $ prefix is reserved, and cannot be used for variables and imports\nhttps://svelte.dev/e/dollar_prefix_invalid"
      ]
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/counter/prompt.md",
    "timestamp": "2025-03-09T22:41:32.480Z"
  },
  {
    "testName": "hello-world",
    "llmProvider": "OpenAI",
    "modelIdentifier": "gpt-4o",
    "generatedCode": "<script>\n    // Svelte 5 logic code (if any) would go here.\n</script>\n\n<style>\n    .greeting {\n        color: blue;\n        text-align: center;\n        margin: 10px;\n    }\n</style>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>",
    "testResult": {
      "testName": "hello-world",
      "success": true,
      "testFiles": 1,
      "totalTests": 2,
      "failedTests": 0,
      "errors": []
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/hello-world/prompt.md",
    "timestamp": "2025-03-09T22:41:34.826Z"
  },
  {
    "testName": "snippets",
    "llmProvider": "OpenAI",
    "modelIdentifier": "gpt-4o",
    "generatedCode": "<script>\n  export let title = '';\n  export let width = '300px';\n  export let variant = 'default';\n\n  import { createSnippetManager } from 'svelte/runtime';\n  const { createSnippet } = createSnippetManager();\n  \n  const header = createSnippet();\n  const footer = createSnippet();\n  const children = createSnippet();\n</script>\n\n<div class=\"card card-{variant}\" style=\"width: {width}\">\n  <div class=\"card-header\">\n    {@render header()}\n    {:else if title}\n      <h3>{title}</h3>\n    {/render}\n  </div>\n\n  <div class=\"card-body\">\n    {@render children()}\n  </div>\n\n  {#if footer}\n    <div class=\"card-footer\">\n      {@render footer()}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .card {\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    padding: 16px;\n    margin: 16px;\n  }\n  .card-default {\n    background-color: #f9f9f9;\n  }\n  .card-primary {\n    background-color: #007bff;\n    color: white;\n  }\n  .card-warning {\n    background-color: #ffc107;\n    color: white;\n  }\n  .card-header,\n  .card-footer {\n    margin-bottom: 16px;\n  }\n</style>\n```\n\n```html\n<script>\n  import Card from './Card.svelte';\n</script>\n\n<Card title=\"Default Card\" variant=\"primary\">\n  {#snippet children()}\n    <p>This is the main content of the card.</p>\n  {/snippet}\n\n  {#snippet footer()}\n    <p>Card footer content</p>\n  {/snippet}\n</Card>\n\n<Card variant=\"warning\" width=\"400px\">\n  {#snippet header()}\n    <h2 class=\"custom-header\">Custom Header</h2>\n  {/snippet}\n\n  {#snippet children()}\n    <p>Card with custom header.</p>\n  {/snippet}\n</Card>",
    "testResult": {
      "testName": "snippets",
      "success": false,
      "testFiles": 1,
      "totalTests": 0,
      "failedTests": 0,
      "errors": [
        "tmp/Component.svelte:17:5 {:...} block is invalid at this position (did you forget to close the preceding element or block?)\nhttps://svelte.dev/e/block_invalid_continuation_placement"
      ]
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/snippets/prompt.md",
    "timestamp": "2025-03-09T22:41:42.685Z"
  },
  {
    "testName": "counter",
    "llmProvider": "OpenAI",
    "modelIdentifier": "o3-mini",
    "generatedCode": "<script>\n\tlet count = $state(0);\n\t\n\tfunction increment() {\n\t\tcount++;\n\t}\n\t\n\tfunction decrement() {\n\t\tcount--;\n\t}\n</script>\n\n<div class=\"counter\">\n\t<button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n\t<span data-testid=\"count-value\">{count}</span>\n\t<button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>\n\n<style>\n\t.counter {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 1rem;\n\t\tfont-size: 1.5rem;\n\t}\n</style>",
    "testResult": {
      "testName": "counter",
      "success": true,
      "testFiles": 1,
      "totalTests": 4,
      "failedTests": 0,
      "errors": []
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/counter/prompt.md",
    "timestamp": "2025-03-09T22:41:53.536Z"
  },
  {
    "testName": "hello-world",
    "llmProvider": "OpenAI",
    "modelIdentifier": "o3-mini",
    "generatedCode": "<script>\n  // No script needed for this component\n</script>\n\n<style>\n  .greeting {\n    color: blue;\n    text-align: center;\n    margin: 10px;\n  }\n</style>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>",
    "testResult": {
      "testName": "hello-world",
      "success": true,
      "testFiles": 1,
      "totalTests": 2,
      "failedTests": 0,
      "errors": []
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/hello-world/prompt.md",
    "timestamp": "2025-03-09T22:41:57.688Z"
  },
  {
    "testName": "snippets",
    "llmProvider": "OpenAI",
    "modelIdentifier": "o3-mini",
    "generatedCode": "<!-- Card.svelte -->\n<script>\n  export let title = \"\";\n  export let width = \"300px\";\n  export let variant = \"default\";\n</script>\n\n<div class=\"card card-{variant}\" style=\"width: {width}\">\n  <div class=\"card-header\">\n    {#if header}\n      {@render header({ greeting: \"Hello from Card Header\" })}\n    {:else if title}\n      <h3>{title}</h3>\n    {/if}\n  </div>\n  <div class=\"card-body\">\n    {@render children()}\n  </div>\n  {#if footer}\n    <div class=\"card-footer\">\n      {@render footer({ timestamp: new Date().toLocaleTimeString() })}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .card {\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    overflow: hidden;\n    font-family: sans-serif;\n    margin: 10px;\n  }\n  .card-header {\n    background-color: #f5f5f5;\n    padding: 8px;\n  }\n  .card-body {\n    padding: 8px;\n  }\n  .card-footer {\n    background-color: #f5f5f5;\n    padding: 8px;\n    text-align: right;\n  }\n  .card-default {\n    border-color: #ccc;\n  }\n  .card-primary {\n    border-color: #007bff;\n  }\n  .card-warning {\n    border-color: #ffc107;\n  }\n</style>\n\n<!-- Test.svelte -->\n<script>\n  import Card from \"./Card.svelte\";\n</script>\n\n<Card title=\"Default Card\" variant=\"primary\">\n  <p>This is the main content of the card.</p>\n\n  {#snippet footer()}\n    <p>Card footer content. Timestamp: {timestamp}</p>\n  {/snippet}\n</Card>\n\n<Card variant=\"warning\" width=\"400px\">\n  {#snippet header()}\n    <h2 class=\"custom-header\">Custom Header. Greeting: {greeting}</h2>\n  {/snippet}\n\n  <p>Card with custom header.</p>\n</Card>",
    "testResult": {
      "testName": "snippets",
      "success": false,
      "testFiles": 1,
      "totalTests": 0,
      "failedTests": 0,
      "errors": [
        "tmp/Component.svelte:58:0 A component can have a single top-level `<script>` element and/or a single top-level `<script module>` element\nhttps://svelte.dev/e/script_duplicate"
      ]
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/snippets/prompt.md",
    "timestamp": "2025-03-09T22:42:19.605Z"
  },
  {
    "testName": "counter",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-7-sonnet-20250219",
    "generatedCode": "<script>\n  let count = $state(0);\n\n  function increment() {\n    count++;\n  }\n\n  function decrement() {\n    count--;\n  }\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>\n\n<style>\n  .counter {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n\n  button {\n    padding: 0.5rem 1rem;\n    font-size: 1.25rem;\n    cursor: pointer;\n  }\n\n  span {\n    font-size: 1.5rem;\n    min-width: 2rem;\n    text-align: center;\n  }\n</style>",
    "testResult": {
      "testName": "counter",
      "success": true,
      "testFiles": 1,
      "totalTests": 4,
      "failedTests": 0,
      "errors": []
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/counter/prompt.md",
    "timestamp": "2025-03-09T22:42:23.930Z"
  },
  {
    "testName": "hello-world",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-7-sonnet-20250219",
    "generatedCode": "<script>\n</script>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n  .greeting {\n    color: blue;\n    text-align: center;\n    margin: 1rem;\n  }\n</style>",
    "testResult": {
      "testName": "hello-world",
      "success": true,
      "testFiles": 1,
      "totalTests": 2,
      "failedTests": 0,
      "errors": []
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/hello-world/prompt.md",
    "timestamp": "2025-03-09T22:42:26.431Z"
  },
  {
    "testName": "snippets",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-7-sonnet-20250219",
    "generatedCode": "<script>\n  export let title = undefined;\n  export let width = \"300px\";\n  export let variant = \"default\";\n</script>\n\n<div class=\"card card-{variant}\" style=\"width: {width}\">\n  {#if $$slots.header}\n    <div class=\"card-header\">\n      {@render $$slots.header()}\n    </div>\n  {:else if title}\n    <div class=\"card-header\">\n      <h3>{title}</h3>\n    </div>\n  {/if}\n\n  <div class=\"card-body\">\n    {@render $$slots.default()}\n  </div>\n\n  {#if $$slots.footer}\n    <div class=\"card-footer\">\n      {@render $$slots.footer()}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .card {\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n    margin-bottom: 1rem;\n  }\n\n  .card-default {\n    background-color: white;\n    border: 1px solid #e2e8f0;\n  }\n\n  .card-primary {\n    background-color: #f0f5ff;\n    border: 1px solid #4299e1;\n  }\n\n  .card-warning {\n    background-color: #fffbeb;\n    border: 1px solid #f59e0b;\n  }\n\n  .card-header {\n    padding: 1rem;\n    border-bottom: 1px solid #e2e8f0;\n  }\n\n  .card-body {\n    padding: 1rem;\n  }\n\n  .card-footer {\n    padding: 1rem;\n    border-top: 1px solid #e2e8f0;\n  }\n</style>",
    "testResult": {
      "testName": "snippets",
      "success": false,
      "testFiles": 1,
      "totalTests": 0,
      "failedTests": 0,
      "errors": [
        "tmp/Component.svelte:8:7 Cannot use `<slot>` syntax and `{@render ...}` tags in the same component. Migrate towards `{@render ...}` tags completely\nhttps://svelte.dev/e/slot_snippet_conflict"
      ]
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/snippets/prompt.md",
    "timestamp": "2025-03-09T22:42:33.400Z"
  },
  {
    "testName": "counter",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-5-sonnet-20241022",
    "generatedCode": "<script>\n  let count = $state(0);\n\n  function increment() {\n    count++;\n  }\n\n  function decrement() {\n    count--;\n  }\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>\n\n<style>\n  .counter {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n\n  button {\n    padding: 0.5rem 1rem;\n    font-size: 1.2rem;\n    cursor: pointer;\n  }\n\n  span {\n    font-size: 1.2rem;\n    min-width: 2rem;\n    text-align: center;\n  }\n</style>",
    "testResult": {
      "testName": "counter",
      "success": true,
      "testFiles": 1,
      "totalTests": 4,
      "failedTests": 0,
      "errors": []
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/counter/prompt.md",
    "timestamp": "2025-03-09T22:42:37.590Z"
  },
  {
    "testName": "hello-world",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-5-sonnet-20241022",
    "generatedCode": "<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n  .greeting {\n    color: blue;\n    text-align: center;\n    margin: 1rem;\n  }\n</style>",
    "testResult": {
      "testName": "hello-world",
      "success": true,
      "testFiles": 1,
      "totalTests": 2,
      "failedTests": 0,
      "errors": []
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/hello-world/prompt.md",
    "timestamp": "2025-03-09T22:42:39.710Z"
  },
  {
    "testName": "snippets",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-5-sonnet-20241022",
    "generatedCode": "<!-- Card.svelte -->\n<script>\n  let { title = '', width = '300px', variant = 'default' } = $props();\n</script>\n\n<div class=\"card card-{variant}\" style=\"width: {width}\">\n  <div class=\"card-header\">\n    {#if header}\n      {@render header()}\n    {:else if title}\n      <h3>{title}</h3>  \n    {/if}\n  </div>\n\n  <div class=\"card-body\">\n    {@render children()}\n  </div>\n\n  {#if footer}\n    <div class=\"card-footer\">\n      {@render footer()}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .card {\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    margin: 1rem;\n    overflow: hidden;\n  }\n\n  .card-default {\n    background: white;\n    border: 1px solid #ddd;\n  }\n\n  .card-primary {\n    background: #e3f2fd;\n    border: 1px solid #90caf9;\n  }\n\n  .card-warning {\n    background: #fff3e0;\n    border: 1px solid #ffe0b2;\n  }\n\n  .card-header {\n    padding: 1rem;\n    border-bottom: 1px solid #eee;\n  }\n\n  .card-body {\n    padding: 1rem;\n  }\n\n  .card-footer {\n    padding: 1rem;\n    border-top: 1px solid #eee;\n  }\n\n  h3 {\n    margin: 0;\n    font-size: 1.25rem;\n  }\n</style>\n\n<!-- App.svelte -->\n<script>\n  import Card from './Card.svelte';\n</script>\n\n<Card title=\"Default Card\">\n  <p>This is a basic card with default styling.</p>\n</Card>\n\n<Card title=\"Primary Card\" variant=\"primary\" width=\"400px\">\n  <p>This is a primary card with custom width.</p>\n  \n  {#snippet footer()}\n    <p>Footer content here</p>\n  {/snippet}\n</Card>\n\n<Card variant=\"warning\">\n  {#snippet header()}\n    <h2>Custom Header</h2>\n  {/snippet}\n\n  <p>Card with custom header and warning style.</p>\n\n  {#snippet footer()}\n    <div class=\"custom-footer\">\n      <button>Action</button>\n    </div>\n  {/snippet}\n</Card>",
    "testResult": {
      "testName": "snippets",
      "success": false,
      "testFiles": 1,
      "totalTests": 0,
      "failedTests": 0,
      "errors": [
        "tmp/Component.svelte:70:0 A component can have a single top-level `<script>` element and/or a single top-level `<script module>` element\nhttps://svelte.dev/e/script_duplicate"
      ]
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/snippets/prompt.md",
    "timestamp": "2025-03-09T22:42:50.005Z"
  },
  {
    "testName": "counter",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-5-sonnet-20240620",
    "generatedCode": "<script>\n  let count = $state(0);\n\n  function increment() {\n    count++;\n  }\n\n  function decrement() {\n    count--;\n  }\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>\n\n<style>\n  .counter {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n\n  button {\n    font-size: 18px;\n    padding: 5px 10px;\n    cursor: pointer;\n  }\n\n  span {\n    font-size: 20px;\n    font-weight: bold;\n  }\n</style>",
    "testResult": {
      "testName": "counter",
      "success": true,
      "testFiles": 1,
      "totalTests": 4,
      "failedTests": 0,
      "errors": []
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/counter/prompt.md",
    "timestamp": "2025-03-09T22:42:54.137Z"
  },
  {
    "testName": "hello-world",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-5-sonnet-20240620",
    "generatedCode": "<script>\n</script>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n  .greeting {\n    color: blue;\n    text-align: center;\n    margin: 10px;\n  }\n</style>",
    "testResult": {
      "testName": "hello-world",
      "success": true,
      "testFiles": 1,
      "totalTests": 2,
      "failedTests": 0,
      "errors": []
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/hello-world/prompt.md",
    "timestamp": "2025-03-09T22:42:56.271Z"
  },
  {
    "testName": "snippets",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-5-sonnet-20240620",
    "generatedCode": "<script>\n  let { snippets } = $props();\n  export let title = undefined;\n  export let width = \"300px\";\n  export let variant = \"default\";\n</script>\n\n<div class=\"card card-{variant}\" style=\"width: {width}\">\n  <div class=\"card-header\">\n    {#if snippets.header}\n      {@render snippets.header()}\n    {:else if title}\n      <h3>{title}</h3>\n    {/if}\n  </div>\n\n  <div class=\"card-body\">\n    {@render snippets.default()}\n  </div>\n\n  {#if snippets.footer}\n    <div class=\"card-footer\">\n      {@render snippets.footer()}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .card {\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    overflow: hidden;\n  }\n  .card-header {\n    padding: 10px;\n    background-color: #f5f5f5;\n    border-bottom: 1px solid #ddd;\n  }\n  .card-body {\n    padding: 15px;\n  }\n  .card-footer {\n    padding: 10px;\n    background-color: #f5f5f5;\n    border-top: 1px solid #ddd;\n  }\n  .card-primary {\n    border-color: #007bff;\n  }\n  .card-primary .card-header {\n    background-color: #007bff;\n    color: white;\n  }\n  .card-warning {\n    border-color: #ffc107;\n  }\n  .card-warning .card-header {\n    background-color: #ffc107;\n    color: #333;\n  }\n</style>",
    "testResult": {
      "testName": "snippets",
      "success": false,
      "testFiles": 1,
      "totalTests": 0,
      "failedTests": 0,
      "errors": [
        "tmp/Component.svelte:3:2 Cannot use `export let` in runes mode — use `$props()` instead\nhttps://svelte.dev/e/legacy_export_invalid"
      ]
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/snippets/prompt.md",
    "timestamp": "2025-03-09T22:43:03.100Z"
  },
  {
    "testName": "counter",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-5-haiku-20241022",
    "generatedCode": "<script>\n  let count = $state(0);\n</script>\n\n<div class=\"counter\">\n  <button \n    data-testid=\"decrement-button\" \n    on:click={() => count--}\n  >\n    -\n  </button>\n  <span data-testid=\"count-value\">{count}</span>\n  <button \n    data-testid=\"increment-button\" \n    on:click={() => count++}\n  >\n    +\n  </button>\n</div>\n\n<style>\n  .counter {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n</style>",
    "testResult": {
      "testName": "counter",
      "success": true,
      "testFiles": 1,
      "totalTests": 4,
      "failedTests": 0,
      "errors": []
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/counter/prompt.md",
    "timestamp": "2025-03-09T22:43:07.066Z"
  },
  {
    "testName": "hello-world",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-5-haiku-20241022",
    "generatedCode": "<script lang=\"ts\">\n  // No script logic needed for this component\n</script>\n\n<div data-testid=\"greeting\" class=\"greeting\">\n  Hello, World!\n</div>\n\n<style>\n  .greeting {\n    color: blue;\n    text-align: center;\n    margin: 20px;\n  }\n</style>",
    "testResult": {
      "testName": "hello-world",
      "success": true,
      "testFiles": 1,
      "totalTests": 2,
      "failedTests": 0,
      "errors": []
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/hello-world/prompt.md",
    "timestamp": "2025-03-09T22:43:10.024Z"
  },
  {
    "testName": "snippets",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-5-haiku-20241022",
    "generatedCode": "<script lang=\"ts\">\n  let {\n    title = '',\n    width = '300px',\n    variant = 'default'\n  } = $props();\n\n  let header = $props.snippet(null);\n  let footer = $props.snippet(null);\n  let children = $props.snippet(null);\n</script>\n\n<div class=\"card card-{variant}\" style=\"width: {width}\">\n  <div class=\"card-header\">\n    {#if header} \n      {@render header()}\n    {:else if title}\n      <h3>{title}</h3>\n    {/if}\n  </div>\n\n  <div class=\"card-body\">\n    {@render children()}\n  </div>\n\n  {#if footer}\n    <div class=\"card-footer\">\n      {@render footer()}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .card {\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  .card-default {\n    background-color: white;\n  }\n\n  .card-primary {\n    background-color: #e6f2ff;\n    border-color: #3498db;\n  }\n\n  .card-warning {\n    background-color: #fff3cd;\n    border-color: #ffc107;\n  }\n\n  .card-header, .card-body, .card-footer {\n    padding: 15px;\n  }\n\n  .card-header {\n    border-bottom: 1px solid #eee;\n  }\n\n  .card-footer {\n    border-top: 1px solid #eee;\n  }\n</style>",
    "testResult": {
      "testName": "snippets",
      "success": false,
      "testFiles": 1,
      "totalTests": 0,
      "failedTests": 0,
      "errors": [
        "tmp/Component.svelte:8:15 `$props.snippet` is not a valid rune\nhttps://svelte.dev/e/rune_invalid_name"
      ]
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/snippets/prompt.md",
    "timestamp": "2025-03-09T22:43:18.141Z"
  },
  {
    "testName": "counter",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-opus-20240229",
    "generatedCode": "<script>\n  import { state } from 'svelte/state';\n  \n  const count = state(0);\n  \n  function increment() {\n    $count += 1;\n  }\n  \n  function decrement() {\n    $count -= 1;\n  }\n</script>\n\n<div class=\"counter\">\n  <button data-testid=\"decrement-button\" on:click={decrement}>-</button>\n  <span data-testid=\"count-value\">{$count}</span>\n  <button data-testid=\"increment-button\" on:click={increment}>+</button>\n</div>\n\n<style>\n  .counter {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n  \n  button {\n    font-size: 1.5rem;\n    padding: 0.5rem 1rem;\n  }\n  \n  span {\n    font-size: 2rem;\n  }\n</style>",
    "testResult": {
      "testName": "counter",
      "success": false,
      "testFiles": 1,
      "totalTests": 0,
      "failedTests": 0,
      "errors": [
        "Missing \"./state\" specifier in \"svelte\" package"
      ]
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/counter/prompt.md",
    "timestamp": "2025-03-09T22:43:30.191Z"
  },
  {
    "testName": "hello-world",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-opus-20240229",
    "generatedCode": "<script>\n</script>\n\n<div data-testid=\"greeting\" class=\"greeting\">Hello, World!</div>\n\n<style>\n  .greeting {\n    color: blue;\n    text-align: center;\n    margin: 10px;\n  }\n</style>",
    "testResult": {
      "testName": "hello-world",
      "success": true,
      "testFiles": 1,
      "totalTests": 2,
      "failedTests": 0,
      "errors": []
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/hello-world/prompt.md",
    "timestamp": "2025-03-09T22:43:34.373Z"
  },
  {
    "testName": "snippets",
    "llmProvider": "Anthropic",
    "modelIdentifier": "claude-3-opus-20240229",
    "generatedCode": "<script>\n  export let title = '';\n  export let width = '300px';\n  export let variant = 'default';\n</script>\n\n<div class=\"card card-{variant}\" style=\"width: {width}\">\n  <div class=\"card-header\">\n    {#if header}\n      {@render header()}\n    {:else if title}\n      <h3>{title}</h3>\n    {/if}\n  </div>\n\n  <div class=\"card-body\">\n    {@render children()}\n  </div>\n\n  {#if footer}\n    <div class=\"card-footer\">\n      {@render footer()}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .card {\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n  }\n\n  .card-default {\n    background-color: #fff;\n  }\n\n  .card-primary {\n    background-color: #007bff;\n    color: #fff;\n  }\n\n  .card-warning {\n    background-color: #ffc107;\n    color: #333;\n  }\n\n  .card-header {\n    padding: 10px;\n    background-color: #f5f5f5;\n    border-bottom: 1px solid #ccc;\n  }\n\n  .card-body {\n    padding: 10px;\n  }\n\n  .card-footer {\n    padding: 10px;\n    background-color: #f5f5f5;\n    border-top: 1px solid #ccc;\n  }\n</style>\n```\n\n```html\n<script>\n  import Card from './Card.svelte';\n</script>\n\n<Card title=\"Default Card\" variant=\"primary\">\n  <p>This is the main content of the card.</p>\n\n  {#snippet footer()}\n    <p>Card footer content</p>\n  {/snippet}\n</Card>\n\n<Card variant=\"warning\" width=\"400px\">\n  {#snippet header()}\n    <h2 class=\"custom-header\">Custom Header</h2>\n  {/snippet}\n\n  <p>Card with custom header.</p>\n</Card>\n\n<Card>\n  {#snippet header(name)}\n    <h2>Hello, {name}!</h2>\n  {/snippet}\n\n  <p>This card demonstrates passing parameters to snippets.</p>\n\n  {#snippet footer()}\n    <button on:click={() => alert('Button clicked!')}>Click me</button>\n  {/snippet}\n</Card>",
    "testResult": {
      "testName": "snippets",
      "success": false,
      "testFiles": 1,
      "totalTests": 0,
      "failedTests": 0,
      "errors": [
        "tmp/Component.svelte:68:0 A component can have a single top-level `<script>` element and/or a single top-level `<script module>` element\nhttps://svelte.dev/e/script_duplicate"
      ]
    },
    "promptPath": "/Users/k/Documents/GitHub/svelte-bench/src/tests/snippets/prompt.md",
    "timestamp": "2025-03-09T22:43:57.876Z"
  }
]