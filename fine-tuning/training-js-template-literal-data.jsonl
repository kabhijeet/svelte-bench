{"messages": [{"role": "system", "content": "You are an expert Svelte 5 developer. Always use proper JavaScript syntax including backticks for template literals."}, {"role": "user", "content": "Create a Svelte 5 component with $inspect that logs 'Text updated to: [value]' when text changes."}, {"role": "assistant", "content": "<svelte:options runes={true} />\n\n<script>\n\tlet text = $state(\"Hello world\");\n\t\n\t$inspect(text).with((type, value) => {\n\t\tif (type === \"update\") {\n\t\t\tconsole.log(`Text updated to: \"${value}\"`);\n\t\t}\n\t});\n</script>\n\n<div>\n\t<input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n\t<p data-testid=\"text-value\">Current text: \"{text}\"</p>\n</div>"}]},
{"messages": [{"role": "system", "content": "You are an expert Svelte 5 developer. Always use proper JavaScript syntax including backticks for template literals."}, {"role": "user", "content": "Create $inspect with effect that logs character count."}, {"role": "assistant", "content": "<svelte:options runes={true} />\n\n<script>\n\tlet text = $state(\"Hello world\");\n\t\n\t$effect(() => {\n\t\t$inspect.trace(\"text-changes\");\n\t\tconsole.log(`The text is now: \"${text}\" (${text.length} characters)`);\n\t});\n</script>\n\n<div>\n\t<input data-testid=\"text-input\" type=\"text\" bind:value={text} />\n\t<p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>"}]},
{"messages": [{"role": "system", "content": "You are an expert Svelte 5 developer. Always use proper JavaScript syntax including backticks for template literals."}, {"role": "user", "content": "Show me the WRONG way to use template literals in console.log"}, {"role": "assistant", "content": "Here are common WRONG patterns to avoid:\n\n```javascript\n// ❌ WRONG - missing backticks (syntax error)\nconsole.log(Text updated to: \"${value}\");\nconsole.log(The text is now: \"${text}\" (${text.length} characters));\n\n// ✅ CORRECT - with backticks\nconsole.log(`Text updated to: \"${value}\"`);\nconsole.log(`The text is now: \"${text}\" (${text.length} characters)`);\n```\n\nAlways use backticks (`) for template literals with ${} interpolation."}]},
{"messages": [{"role": "system", "content": "You are an expert Svelte 5 developer. Always use proper JavaScript syntax including backticks for template literals."}, {"role": "user", "content": "Create complete Svelte inspect component with all features"}, {"role": "assistant", "content": "<svelte:options runes={true} />\n\n<script>\n\tlet text = $state(\"Hello world\");\n\t\n\t// Basic $inspect usage\n\t$inspect(text);\n\t\n\t// Custom logging with proper template literals\n\t$inspect(text).with((type, value) => {\n\t\tif (type === \"update\") {\n\t\t\tconsole.log(`Text updated to: \"${value}\"`);\n\t\t}\n\t});\n\t\n\t// Effect with $inspect.trace\n\t$effect(() => {\n\t\t$inspect.trace(\"text-changes\");\n\t\tconsole.log(`The text is now: \"${text}\" (${text.length} characters)`);\n\t});\n</script>\n\n<div>\n\t<label for=\"text-input\">Edit text:</label>\n\t<input \n\t\tdata-testid=\"text-input\" \n\t\tid=\"text-input\" \n\t\ttype=\"text\" \n\t\tbind:value={text} \n\t/>\n\t<p data-testid=\"text-value\">Current text: \"{text}\"</p>\n\t<p data-testid=\"char-count\">Character count: {text.length}</p>\n</div>"}}